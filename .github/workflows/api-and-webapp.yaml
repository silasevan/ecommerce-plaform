name: CI for API and WebApp

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  api:
    name: API – Install, Test, Build Docker Image
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./api

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: docker build -t ecommerce-api .

  webapp:
    name: WebApp – Install, Test, Build Docker Image
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./webapp

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test -- --passWithNoTests

      - name: Build the app
        run: npm run build

      - name: Build Docker image
        run: docker build -t ecommerce-webapp .


  deploy:
    name: Deploy to AWS ECR
    runs-on: ubuntu-latest
    needs: [api, webapp]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push API image
        working-directory: ./api
        run: |
          IMAGE_URI_API="${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPO_API }}:latest"
          docker build -t $IMAGE_URI_API .
          docker push $IMAGE_URI_API

      - name: Build, tag, and push WebApp image
        working-directory: ./webapp
        run: |
          IMAGE_URI_WEBAPP="${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPO_WEBAPP }}:latest"
          docker build -t $IMAGE_URI_WEBAPP .
          docker push $IMAGE_URI_WEBAPP

